#!/usr/bin/perl
use DBI;
use Time::HiRes qw ( time );
use FindBin;
use lib "$FindBin::Bin/../lib/perl";
use DbiBatchExecutor;

my $GENES_FILE_NAME = "formatted_gene_list.txt";

my @envVars = ('DB_HOST', 'DB_PORT', 'DB_NAME', 'DB_PLATFORM', 'DB_USER', 'DB_PASS', 'DB_SCHEMA');

my ($userDatasetId, $filesDir) = @ARGV;

usage() unless scalar(@ARGV) == 2;

my $t = time();
for my $envVar (@envVars) { die "Missing env variable '$envVar'\n" unless $ENV{$envVar}; }
my $dbh = DBI->connect("dbi:$ENV{DB_PLATFORM}://$ENV{DB_HOST}:$ENV{DB_PORT}/$ENV{DB_NAME}", $ENV{DB_USER}, $ENV{DB_PASS})
    || die "Couldn't connect to database: " . DBI->errstr;

print STDERR "connect time: " . (time() - $t) . "\n";

$dbh->{RaiseError} = 1;
$dbh->{AutoCommit} = 0;

my $dbSchema = $ENV{DB_SCHEMA};

my $sth = $dbh->prepare(<<EOF);
    INSERT INTO $dbSchema.UD_GeneId
    VALUES (?,?)
EOF

open(F, "<$filesDir/$GENES_FILE_NAME") || die "Can't open gene list file '$filesDir/$GENES_FILE_NAME' $!\n";
my @udIdArray;
my @geneIdArray;
my $batchExecutor = new DbiBatchExecutor(100, 1000);
while(<F>) {
  chomp;
  push(@udIdArray, $userDatasetId);
  push(@geneIdArray, $_);
  $batchExecutor->periodicallyExecuteBatch($dbh, $sth, 0, \@udIdArray, \@geneIdArray);
}
$batchExecutor->periodicallyExecuteBatch($dbh, $sth, 1, \@udIdArray, \@geneIdArray);

$dbh->disconnect();

print STDERR "total time: " . (time() - $t) . "\n";

##########################################
#  the code below can go into a library
##########################################

sub insertTupleArray {
  my ($sth, $finalBatch, @arrayRefs) = @_;

  $batchCount++;
  $commitCount++;
  $batchNum++;
  if ($batchCount == $BATCH_SIZE || $finalBatch) {
    my $insertCount = $sth->execute_array({ ArrayTupleStatus => \my @tuple_status }, @arrayRefs);
    die "Failed inserting batch number $batchNum\n" unless $insertCount;
    $batchCount = 0;
    for my $arrayRef (@arrayRefs) {
      @$arrayRef = ();
    }
  }
  if ($commitCount == $COMMIT_SIZE || $finalBatch) {
    $dbh->commit();
    $commitCount = 0;
  }
}

sub usage {

  my $envStr = join(", \$", @envVars);

  die "
Install a Gene List user dataset in the user dataset schema.

Usage: install-data user_dataset_id files_dir

Where:
  user_dataset_id:  a user dataset id
  files_dir:        a directory containing exactly one file.  This file is the gene_list_file, a txt file with one column per line containing a gene source id

Env: $envStr

";
}
